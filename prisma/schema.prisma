generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model asignatura {
  id     Int    @id @default(autoincrement())
  nombre String @unique
  oas    oa[]

  @@map("asignatura")
}

model nivel {
  id     Int    @id @default(autoincrement())
  nombre String @unique
  oas    oa[]

  @@map("nivel")
}

model metodologia {
  id                 Int    @id @default(autoincrement())
  nombre_metodologia String @unique
  descripcion        String
  nivel_recomendado  String
  fuentes_literatura String

  @@map("metodologia")
}

model oa {
  id              Int        @id @default(autoincrement())
  nivel_id        Int
  asignatura_id   Int
  eje_id          Int
  eje_descripcion String
  oas_id          String
  descripcion_oas String
  basal           Boolean
  minimo_clases   Int
  asignatura      asignatura @relation(fields: [asignatura_id], references: [id])
  nivel           nivel      @relation(fields: [nivel_id], references: [id])

  @@map("oa")
}

model MatrizEspecificacion {
  id              Int        @id @default(autoincrement())
  nombre          String
  total_preguntas Int
  createdAt       DateTime   @default(now())
  oas             MatrizOA[]
  evaluaciones    Evaluacion[]
}

model MatrizOA {
  id          Int                  @id @default(autoincrement())
  matrizId    Int
  oaId        Int
  indicadores Indicador[]
  matriz      MatrizEspecificacion @relation(fields: [matrizId], references: [id])
}

model Indicador {
  id          Int      @id @default(autoincrement())
  matrizOAId  Int
  descripcion String
  preguntas   Int
  matrizOA    MatrizOA @relation(fields: [matrizOAId], references: [id])
}

model Archivo {
  id        Int             @id @default(autoincrement())
  titulo    String
  tipo      String
  contenido String
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt
  imagenes  ArchivoImagen[]
  evaluaciones Evaluacion[]
}

model Imagen {
  id        Int             @id @default(autoincrement())
  nombre    String
  tipo      String
  data      String
  tama√±o   Int
  createdAt DateTime        @default(now())
  archivos  ArchivoImagen[]
}

model ArchivoImagen {
  id        Int      @id @default(autoincrement())
  archivoId Int
  imagenId  Int
  createdAt DateTime @default(now())
  imagen    Imagen   @relation(fields: [imagenId], references: [id], onDelete: Cascade)
  archivo   Archivo  @relation(fields: [archivoId], references: [id], onDelete: Cascade)

  @@unique([archivoId, imagenId])
}

model Evaluacion {
  id           Int          @id @default(autoincrement())
  archivoId    Int          // FK a Archivo (el contenido TipTap)
  matrizId     Int          // FK a MatrizEspecificacion
  preguntas    Pregunta[]
  archivo      Archivo      @relation(fields: [archivoId], references: [id])
  matriz       MatrizEspecificacion @relation(fields: [matrizId], references: [id])
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt

  @@map("evaluacion")
}

model Pregunta {
  id           Int          @id @default(autoincrement())
  evaluacionId Int
  numero       Int
  texto        String
  alternativas Alternativa[]
  evaluacion   Evaluacion   @relation(fields: [evaluacionId], references: [id])

  @@map("pregunta")
}

model Alternativa {
  id           Int          @id @default(autoincrement())
  preguntaId   Int
  letra        String       // "a", "b", "c", etc.
  texto        String
  esCorrecta   Boolean      @default(false)
  pregunta     Pregunta     @relation(fields: [preguntaId], references: [id])

  @@map("alternativa")
}
